#!/bin/sh

bibfile=$1
bibkey=$2
webauthor=${3-"Thomas Graf"}
tmpfile=/tmp/bib2blog_${bibkey}.bib
auxfile_folder=${HOME}/Latex/bibextra/
content_folder=${HOME}/dev/website_pelican/content/

######################
#  File Preparation  #
######################

# extract bibtex entry
awk -v RS='' "/${bibkey},/" $bibfile > $tmpfile

# convert via bib2mdown
cp $tmpfile ${bibkey}.bib
./bib/bib2mdown -f $tmpfile -t Entry -o bib2blog_${bibkey}


#########################
#  Variable Extraction  #
#########################

# first we go throug hthe pandoc-processed file;
# author goes from third position until first space before (
author=$(sed -e 's/^- \([^(]*\) .*/\1/' bib2blog_${bibkey})
# year occurs between first ( and )
year=$(sed -e 's/^[^(]*(\([0-9]*\)).*/\1/' bib2blog_${bibkey})
# title occurs between first occurrence of stars
title=$(sed -e 's/[^*]*\*\?\*\([^*]*\).*/\1/' bib2blog_${bibkey})

# abstract and tags have their own files so that we do not clutter the bibtex file;
abstract=$(cat ${auxfile_folder}${bibkey}/abstract.pd 2>/dev/null)
tags=$(cat ${auxfile_folder}${bibkey}/tags.pd 2>/dev/null)
date=$(cat ${auxfile_folder}${bibkey}/date.pd 2>/dev/null)
desc=$(cat ${auxfile_folder}${bibkey}/desc.pd 2>/dev/null)

if [ "x$date"="x" ]; then
    date=$(echo $year | tr -d "\n")-01-01
fi


# now back to the original bibentry;
# its found between @ and { on the first line;
# we discard all other lines
bibtype=$(sed -e '1s/^@\([^{[:space:]]*\).*/\1/' ${bibkey}.bib | head -n 1)
bibtex_clean=$(cat ${bibkey}.bib)

case $bibtype in
    Book|book|Proceedings|proceedings)
        category="Books"
        ;;
    Misc|misc)
        category="Talks"
        ;;
    *)
        category="Papers"
esac

case $category in
    Talks)
        macrotype="talks"
        ;;
    *)
        macrotype="papers"
        ;;
esac


# Pdf and Code paths are generated automatically

pdf="{filename}/doc/$macrotype/${bibkey}.pdf"
code="{filename}/doc/$macrotype/${bibkey}.tar.gz"

# if test -e "./content/$pdf"; then
    pdflink="[pdf]($pdf)"
# fi
#
# if test -e "./content/$code"; then
    codelink="[code]($code)"
# fi


###################
#  Markdown File  #
###################

# and put them all together
echo "Title: $(echo $title | tr -d "\n")
Author: $webauthor
Date: $date
Category: $category
Tags: $tags

<div markdown class=\"authors\">
$(echo $author | tr -d "\n")
</div>

<div markdown class=\"abstract\">
<span id=\"abstract-title\">Abstract</span>
$abstract
</div>

<div markdown class=\"files\">
<span id=\"files-title\">Files</span>
[$pdflink]
[$codelink]
</div>

~~~bibtex
$bibtex_clean
~~~
" > ${content_folder}${macrotype}/${bibkey}.mdown


##############
#  Clean-Up  #
##############
rm ${bibkey}.bib
rm bib2blog_${bibkey}
